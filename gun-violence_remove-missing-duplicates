{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":27807,"sourceType":"datasetVersion","datasetId":21619}],"dockerImageVersionId":30673,"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/nukaze/gun-violence-remove-missing-duplicates?scriptVersionId=168816112\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\ncsvPath = \"\"\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        csvPath = os.path.join(dirname, filename)\n        print(csvPath)\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-03-26T09:26:21.774589Z","iopub.execute_input":"2024-03-26T09:26:21.77497Z","iopub.status.idle":"2024-03-26T09:26:21.785036Z","shell.execute_reply.started":"2024-03-26T09:26:21.774941Z","shell.execute_reply":"2024-03-26T09:26:21.783799Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# 1. Load csv data","metadata":{}},{"cell_type":"code","source":"df = pd.read_csv(csvPath)","metadata":{"execution":{"iopub.status.busy":"2024-03-26T09:26:21.787364Z","iopub.execute_input":"2024-03-26T09:26:21.787741Z","iopub.status.idle":"2024-03-26T09:26:25.716369Z","shell.execute_reply.started":"2024-03-26T09:26:21.787702Z","shell.execute_reply":"2024-03-26T09:26:25.715168Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# 2. Checking missing values","metadata":{}},{"cell_type":"code","source":"print(df.isnull().sum())","metadata":{"execution":{"iopub.status.busy":"2024-03-26T09:26:25.717747Z","iopub.execute_input":"2024-03-26T09:26:25.718576Z","iopub.status.idle":"2024-03-26T09:26:25.948517Z","shell.execute_reply.started":"2024-03-26T09:26:25.718543Z","shell.execute_reply":"2024-03-26T09:26:25.947346Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# 3. Replace missing values with Mean Imputation","metadata":{}},{"cell_type":"code","source":"\ndef impute_data(df):\n    # Numerical Columns\n    for col in df.select_dtypes(include=['int', 'float']):\n        if df[col].isnull().sum() > 0:  \n           df.loc[df[col].isnull(), col] = df[col].mean()  \n\n    # Categorical Columns    \n    for col in df.select_dtypes(include=['object']):\n        if df[col].isnull().sum() > 0:\n            df.loc[df[col].isnull(), col] = df[col].mode()[0] \n\n    return df\n\n\n# Apply the imputation function\ndf = impute_data(df.copy())\n","metadata":{"execution":{"iopub.status.busy":"2024-03-26T09:26:25.950737Z","iopub.execute_input":"2024-03-26T09:26:25.951345Z","iopub.status.idle":"2024-03-26T09:26:27.525269Z","shell.execute_reply.started":"2024-03-26T09:26:25.951307Z","shell.execute_reply":"2024-03-26T09:26:27.524063Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# 4. Remove duplicates values","metadata":{}},{"cell_type":"code","source":"df = df.drop_duplicates()","metadata":{"execution":{"iopub.status.busy":"2024-03-26T09:26:27.527021Z","iopub.execute_input":"2024-03-26T09:26:27.527384Z","iopub.status.idle":"2024-03-26T09:26:28.509828Z","shell.execute_reply.started":"2024-03-26T09:26:27.527353Z","shell.execute_reply":"2024-03-26T09:26:28.508253Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# 5.  Re-Checking missing values","metadata":{}},{"cell_type":"code","source":"print(df.isnull().sum())","metadata":{"execution":{"iopub.status.busy":"2024-03-26T09:26:28.511391Z","iopub.execute_input":"2024-03-26T09:26:28.511764Z","iopub.status.idle":"2024-03-26T09:26:28.751793Z","shell.execute_reply.started":"2024-03-26T09:26:28.511732Z","shell.execute_reply":"2024-03-26T09:26:28.750843Z"},"trusted":true},"execution_count":null,"outputs":[]}]}